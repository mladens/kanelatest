
db-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 2.0
    // The max that the dispatcher will create:
    parallelism-max = 8
  }
}

baseapp {
  akka.loglevel = "DEBUG"
}

akka {

  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  log-dead-letters = off
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serializers.java = "com.romix.akka.serialization.kryo.KryoSerializer"

    kryo {
      type = "nograph"
      idstrategy = "default"
      serializer-pool-size = 1024
      kryo-reference-map = false
    }
  }

  log-dead-letters = off
  remote {
    log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://FunctionClusterSystem@127.0.0.1:2551"
    ]
    use-dispatcher = "cluster-dispatcher"
  }

}

metrics-dispatcher {
  mailbox-type = "functions.common.MetricsQueueType"
}

execution {
  port = 8080
}

cluster-dispatcher {
  fork-join-executor {
    parallelism-min = 2
    parallelism-max = 4
  }
  executor = "fork-join-executor"
  type = "Dispatcher"
}

# Disable legacy metrics in akka-cluster.
akka.cluster.metrics.enabled=off

# Enable metrics extension in akka-cluster-metrics.
akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native
#//#snippet

// can be docker or local
functions.executioncontext="docker"

kamon {
  environment.service = "My Service"
  apm.api-key = "3405691582rdha8cqdcc9e3eok"
}

kanela.log-level = "INFO"
kanela.debug-mode = true

kamon.instrumentation.akka.filters {
  actors.track {
    includes = ["**"]
    excludes = []
  }
  doomsday-wildcard = on
}

kamon.prometheus.buckets {
  default-buckets = [
    10,
    30,
    100,
    300,
    1000,
    3000,
    10000,
    30000,
    100000
  ]

  time-buckets = [
    0.005,
    0.01,
    0.025,
    0.05,
    0.075,
    0.1,
    0.25,
    0.5,
    0.75,
    1,
    2.5,
    5,
    7.5,
    10
  ]

  information-buckets = [
    512,
    1024,
    2048,
    4096,
    16384,
    65536,
    524288,
    1048576
  ]
}